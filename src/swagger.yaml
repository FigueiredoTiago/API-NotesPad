openapi: 3.0.0
info:
  title: NotePad API
  description: API para gerenciamento de notas
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /note/create:
    post:
      summary: Cria uma nova nota
      security:
        - bearerAuth: []
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Minha nova nota"
                text:
                  type: string
                  example: "Conteúdo da nota"
      responses:
        "201":
          description: Nota criada com sucesso!
        "400":
          description: Preencha todos os campos obrigatórios!
        "401":
          description: Usuario não autenticado!
        "500":
          description: Erro Ao criar nota!

  /note/list:
    get:
      summary: Listar todas as Notas
      security:
        - bearerAuth: []
      tags:
        - Notes
      responses:
        "200":
          description: Lista todas as notas do usuario autenticado.
        "401":
          description: Usuario não autenticado!
        "500":
          description: Erro ao listar notas!

  /note/findnote/:id:
    get:
      summary: Buscar nota pelo ID
      security:
        - bearerAuth: []
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          description: ID da nota
          schema:
            type: number
      responses:
        "200":
          description: Retorna a Nota Encontrada pelo ID.
        "401":
          description: Usuario não autenticado!
        "404":
          description: Nota não encontrada!
        "500":
          description: Erro ao buscar nota!

  /note/updatenote/:id:
    patch:
      summary: Atualiza uma nota pelo ID
      security:
        - bearerAuth: []
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          description: ID da nota
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Nota Editada"
                text:
                  type: string
                  example: "Conteúdo da nota Editada"
      responses:
        "200":
          description: Retorna a Nota Editada.
        "400":
          description: ID da invalido ou campos obrigatórios não preenchidos!
        "401":
          description: Usuario não autenticado!
        "404":
          description: Nota não encontrada!
        "500":
          description: Erro ao editar nota!

  /note/deletenote/:id:
    delete:
      summary: Apaga uma nota pelo ID
      security:
        - bearerAuth: []
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          description: ID da nota
          schema:
            type: number
      responses:
        "200":
          description: Nota deletada com sucesso!
        "400":
          description: ID inválido!
        "401":
          description: Usuário não autenticado!
        "404":
          description: Nota não encontrada!
        "500":
          description: Erro ao deletar nota!
  /note/searchnote:
    get:
      summary: Busca uma nota pelo título
      security:
        - bearerAuth: []
      tags:
        - Notes
      parameters:
        - name: title
          in: query
          required: true
          description: Título da nota
          schema:
            type: string
      responses:
        "200":
          description: Retorna a Nota Encontrada pelo Título.
        "400":
          description: Digite Algo Para Buscar!
        "401":
          description: Usuario não autenticado!
        "404":
          description: Nenhuma nota encontrada!
        "500":
          description: Erro ao buscar nota!
  /user/create:
    post:
      summary: Cria um novo usuário.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick:
                  type: string
                  example: "nick de usuário"
                password:
                  type: string
                  example: "Senha do usuário"
      responses:
        "201":
          description: Usuário criado com sucesso!
        "400":
          description: Preencha todos os campos Nick e Senha ou Nick já está em uso.
        "500":
          description: Erro ao criar usuário!

  /user/login:
    post:
      summary: Realiza o Login do usuário.
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nick:
                  type: string
                  example: "nick de usuário"
                password:
                  type: string
                  example: "Senha do usuário"
      responses:
        "200":
          description: Retorna o Token de autenticação e Nick do usuário.
        "400":
          description: Preencha todos os campos Nick e Senha.
        "401":
          description: Senha incorreta.
        "404":
          description: Usuário não encontrado.
        "500":
          description: Erro ao realizar login!
